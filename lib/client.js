// Generated by CoffeeScript 1.12.3
var Client, Connection, Row, Scanner, Table;

Connection = require("./connection");

Table = require("./table");

Row = require("./row");

Scanner = require("./scanner");

Client = function(options) {
  var ref;
  if (!options) {
    options = {};
  }
  if (options.protocol == null) {
    options.protocol = 'http';
  }
  if (options.host == null) {
    options.host = '127.0.0.1';
  }
  if (options.port == null) {
    options.port = '8080';
  }
  if (options.krb5 == null) {
    options.krb5 = {};
  }
  if (options.encoding == null) {
    options.encoding = 'utf8';
  }
  if ((ref = options.protocol) !== 'http' && ref !== 'https') {
    throw Error("Invalid protocol " + (JSON.stringify(options.protocol)));
  }
  this.options = options;
  this.connection = new Connection(this);
  return this;
};

Client.prototype.version = function(callback) {
  return this.connection.get("/version", callback);
};

Client.prototype.version_cluster = function(callback) {
  return this.connection.get("/version/cluster", callback);
};

Client.prototype.status_cluster = function(callback) {
  return this.connection.get("/status/cluster", callback);
};

Client.prototype.tables = function(callback) {
  return this.connection.get("/", function(err, data) {
    return callback(err, (data && data.table ? data.table : null));
  });
};

Client.prototype.table = function(name) {
  return new Table(this, name);
};

module.exports = Client;
